package com.kambr.parser.onex.tursys

import com.ibm.icu.impl.Assert
import com.kambr.kambrlogger.Logger
import org.antlr.v4.runtime.CharStream
import org.antlr.v4.runtime.CharStreams
import org.junit.jupiter.api.Test
import java.io.IOException

class TurSysParserTest {

    companion object {
        const val FILE_PATH = "src/test/resources/onex/tursys/test-file.csv"
        val logger = Logger(this::class.java)
    }

    @Test
    fun test_tursys_parser() {
        var charStream: CharStream? = null
        try {
            charStream = CharStreams.fromFileName(FILE_PATH)
        } catch (e: IOException) {
            logger.error(e.localizedMessage)
        }
        val tursys = TursysParser.parse(charStream!!).sortedBy { it.segments.size }

        Assert.assrt(4 == tursys.size)

        val tursys0 = tursys[0]
        Assert.assrt(tursys0.segments.size == 1)
        Assert.assrt(tursys0.segments[0].departureDate.toString() == "2020-10-20")
        Assert.assrt(tursys0.segments[0].carrierCode == "CXI")
        Assert.assrt(tursys0.segments[0].flightNumber == "1010")
        Assert.assrt(tursys0.segments[0].origin == "CGN")
        Assert.assrt(tursys0.segments[0].destination == "HRG")
        Assert.assrt(tursys0.segments[0].flightPath == "CGN-HRG")
        Assert.assrt(tursys0.segments[0].cabinCode == "Y")
        Assert.assrt(tursys0.segments[0].seatAssignment == null)
        Assert.assrt(tursys0.segments[0].liftStatus == null)
        Assert.assrt(tursys0.segments[0].boardingSequence == null)
        Assert.assrt(tursys0.pnr == "HBQ38Y")
        Assert.assrt(tursys0.couponIdentificationCode == "1656015")
        Assert.assrt(tursys0.fareBasisCode == "FLEX")
        Assert.assrt(tursys0.bookingTypeCode.value == 3)
        Assert.assrt(tursys0.bookingStatusCode.value == "HK")
        Assert.assrt(tursys0.bookingDate.toString() == "2020-10-21")
        Assert.assrt(tursys0.bookingTime.toString() == "13:00")
        Assert.assrt(tursys0.ticketingDate.toString() == "2020-10-21")
        Assert.assrt(tursys0.ticketingTime.toString() == "14:27:24")
        Assert.assrt(tursys0.cancellationDate == null)
        Assert.assrt(tursys0.agentCode == "2")
        Assert.assrt(tursys0.salesSource == "BO")
        Assert.assrt(tursys0.passengerType.value == "CHD")
        Assert.assrt(tursys0.currency == "EUR")
        Assert.assrt(tursys0.rateOfExchange == 1.toBigDecimal())
        Assert.assrt(tursys0.spoBasePrice == 180.toBigDecimal())
        Assert.assrt(tursys0.discount == 0.toBigDecimal())
        Assert.assrt(tursys0.dynamicPriceAdjustment == 0.toBigDecimal())
        Assert.assrt(!tursys0.priceAdjustmentApplied)
        Assert.assrt(tursys0.salesPrice == 138.3.toBigDecimal())
        Assert.assrt(tursys0.tax == 20.11.toBigDecimal())
        Assert.assrt(tursys0.totalAmount == 158.41.toBigDecimal())

        val tursys1 = tursys[1]
        Assert.assrt(tursys1.segments.size == 1)
        Assert.assrt(tursys1.segments[0].departureDate.toString() == "2020-10-20")
        Assert.assrt(tursys1.segments[0].carrierCode == "CXI")
        Assert.assrt(tursys1.segments[0].flightNumber == "1010")
        Assert.assrt(tursys1.segments[0].origin == "CGN")
        Assert.assrt(tursys1.segments[0].destination == "HRG")
        Assert.assrt(tursys1.segments[0].flightPath == "CGN-HRG")
        Assert.assrt(tursys1.segments[0].cabinCode == "Y")
        Assert.assrt(tursys1.segments[0].seatAssignment == null)
        Assert.assrt(tursys1.segments[0].liftStatus == null)
        Assert.assrt(tursys1.segments[0].boardingSequence == null)
        Assert.assrt(tursys1.pnr == "HBQ38Y")
        Assert.assrt(tursys1.couponIdentificationCode == "1656015")
        Assert.assrt(tursys1.fareBasisCode == "FLEX")
        Assert.assrt(tursys1.bookingTypeCode.value == 3)
        Assert.assrt(tursys1.bookingStatusCode.value == "XX")
        Assert.assrt(tursys1.bookingDate.toString() == "2020-10-21")
        Assert.assrt(tursys1.bookingTime.toString() == "13:00")
        Assert.assrt(tursys1.ticketingDate.toString() == "2020-10-21")
        Assert.assrt(tursys1.ticketingTime.toString() == "14:27:24")
        Assert.assrt(tursys1.cancellationDate!!.toString() == "2020-10-22")
        Assert.assrt(tursys1.agentCode == "2")
        Assert.assrt(tursys1.salesSource == "BO")
        Assert.assrt(tursys1.passengerType.value == "CHD")
        Assert.assrt(tursys1.currency == "EUR")
        Assert.assrt(tursys1.rateOfExchange == 1.toBigDecimal())
        Assert.assrt(tursys1.spoBasePrice == 180.toBigDecimal())
        Assert.assrt(tursys1.discount == 0.toBigDecimal())
        Assert.assrt(tursys1.dynamicPriceAdjustment == 0.toBigDecimal())
        Assert.assrt(!tursys1.priceAdjustmentApplied)
        Assert.assrt(tursys1.salesPrice == 138.3.toBigDecimal())
        Assert.assrt(tursys1.tax == 20.11.toBigDecimal())
        Assert.assrt(tursys1.totalAmount == 158.41.toBigDecimal())

        val tursys2 = tursys[2]
        Assert.assrt(tursys2.segments.size == 2)
        Assert.assrt(tursys2.segments[0].departureDate.toString() == "2020-10-20")
        Assert.assrt(tursys2.segments[0].carrierCode == "CXI")
        Assert.assrt(tursys2.segments[0].flightNumber == "1010")
        Assert.assrt(tursys2.segments[0].origin == "CGN")
        Assert.assrt(tursys2.segments[0].destination == "HRG")
        Assert.assrt(tursys2.segments[0].flightPath == "CGN-HRG-AMS")
        Assert.assrt(tursys2.segments[0].cabinCode == "Y")
        Assert.assrt(tursys2.segments[0].seatAssignment == null)
        Assert.assrt(tursys2.segments[0].liftStatus == null)
        Assert.assrt(tursys2.segments[0].boardingSequence == 0)
        Assert.assrt(tursys2.segments[1].departureDate.toString() == "2020-10-20")
        Assert.assrt(tursys2.segments[1].carrierCode == "CXI")
        Assert.assrt(tursys2.segments[1].flightNumber == "1010")
        Assert.assrt(tursys2.segments[1].origin == "HRG")
        Assert.assrt(tursys2.segments[1].destination == "AMS")
        Assert.assrt(tursys2.segments[1].flightPath == "CGN-HRG-AMS")
        Assert.assrt(tursys2.segments[1].cabinCode == "Y")
        Assert.assrt(tursys2.segments[1].seatAssignment == null)
        Assert.assrt(tursys2.segments[1].liftStatus == null)
        Assert.assrt(tursys2.segments[1].boardingSequence == 0)
        Assert.assrt(tursys2.pnr == "HBQ38Y")
        Assert.assrt(tursys2.couponIdentificationCode == "1656014")
        Assert.assrt(tursys2.fareBasisCode == "FLEX")
        Assert.assrt(tursys2.bookingTypeCode.value == 3)
        Assert.assrt(tursys2.bookingStatusCode.value == "HK")
        Assert.assrt(tursys2.bookingDate.toString() == "2020-10-21")
        Assert.assrt(tursys2.bookingTime.toString() == "13:00")
        Assert.assrt(tursys2.ticketingDate.toString() == "2020-10-21")
        Assert.assrt(tursys2.ticketingTime.toString() == "14:27:24")
        Assert.assrt(tursys2.cancellationDate == null)
        Assert.assrt(tursys2.agentCode == "2")
        Assert.assrt(tursys2.salesSource == "BO")
        Assert.assrt(tursys2.passengerType.value == "CHD")
        Assert.assrt(tursys2.currency == "EUR")
        Assert.assrt(tursys2.rateOfExchange == 1.toBigDecimal())
        Assert.assrt(tursys2.spoBasePrice == 180.toBigDecimal())
        Assert.assrt(tursys2.discount == 0.toBigDecimal())
        Assert.assrt(tursys2.dynamicPriceAdjustment == 0.toBigDecimal())
        Assert.assrt(!tursys2.priceAdjustmentApplied)
        Assert.assrt(tursys2.salesPrice == 138.3.toBigDecimal())
        Assert.assrt(tursys2.tax == 20.11.toBigDecimal())
        Assert.assrt(tursys2.totalAmount == 158.41.toBigDecimal())

        val tursys3 = tursys[3]
        Assert.assrt(tursys3.segments.size == 3)
        Assert.assrt(tursys3.segments[0].departureDate.toString() == "2020-10-20")
        Assert.assrt(tursys3.segments[0].carrierCode == "CXI")
        Assert.assrt(tursys3.segments[0].flightNumber == "1010")
        Assert.assrt(tursys3.segments[0].origin == "CGN")
        Assert.assrt(tursys3.segments[0].destination == "HRG")
        Assert.assrt(tursys3.segments[0].flightPath == "CGN-HRG-AMS-FRA")
        Assert.assrt(tursys3.segments[0].cabinCode == "Y")
        Assert.assrt(tursys3.segments[0].seatAssignment == null)
        Assert.assrt(tursys3.segments[0].liftStatus == null)
        Assert.assrt(tursys3.segments[0].boardingSequence == 0)
        Assert.assrt(tursys3.segments[1].departureDate.toString() == "2020-10-21")
        Assert.assrt(tursys3.segments[1].carrierCode == "CXI")
        Assert.assrt(tursys3.segments[1].flightNumber == "1011")
        Assert.assrt(tursys3.segments[1].origin == "HRG")
        Assert.assrt(tursys3.segments[1].destination == "AMS")
        Assert.assrt(tursys3.segments[1].flightPath == "CGN-HRG-AMS-FRA")
        Assert.assrt(tursys3.segments[1].cabinCode == "C")
        Assert.assrt(tursys3.segments[1].seatAssignment == "A12")
        Assert.assrt(tursys3.segments[1].liftStatus?.name == "BOARDED")
        Assert.assrt(tursys3.segments[1].boardingSequence == 3)
        Assert.assrt(tursys3.segments[2].departureDate.toString() == "2020-10-22")
        Assert.assrt(tursys3.segments[2].carrierCode == "CXI")
        Assert.assrt(tursys3.segments[2].flightNumber == "1012")
        Assert.assrt(tursys3.segments[2].origin == "AMS")
        Assert.assrt(tursys3.segments[2].destination == "FRA")
        Assert.assrt(tursys3.segments[2].flightPath == "CGN-HRG-AMS-FRA")
        Assert.assrt(tursys3.segments[2].cabinCode == "C")
        Assert.assrt(tursys3.segments[2].seatAssignment == "B2")
        Assert.assrt(tursys3.segments[2].liftStatus?.name == "NO_SHOW")
        Assert.assrt(tursys3.segments[2].boardingSequence == 4)
        Assert.assrt(tursys3.pnr == "F36MU1")
        Assert.assrt(tursys3.couponIdentificationCode == "1508679")
        Assert.assrt(tursys3.fareBasisCode == "NEGO")
        Assert.assrt(tursys3.bookingTypeCode.value == 2)
        Assert.assrt(tursys3.bookingStatusCode.value == "WL")
        Assert.assrt(tursys3.bookingDate.toString() == "2020-08-08")
        Assert.assrt(tursys3.bookingTime.toString() == "19:33:08")
        Assert.assrt(tursys3.ticketingDate == null)
        Assert.assrt(tursys3.ticketingTime == null)
        Assert.assrt(tursys3.cancellationDate?.toString() == "2020-08-07")
        Assert.assrt(tursys3.agentCode == "196")
        Assert.assrt(tursys3.salesSource == "API")
        Assert.assrt(tursys3.passengerType.value == "ADT")
        Assert.assrt(tursys3.currency == "EUR")
        Assert.assrt(tursys3.rateOfExchange == 0.8.toBigDecimal())
        Assert.assrt(tursys3.spoBasePrice == 180.9.toBigDecimal())
        Assert.assrt(tursys3.discount == 7.7.toBigDecimal())
        Assert.assrt(tursys3.dynamicPriceAdjustment == 99.8.toBigDecimal())
        Assert.assrt(tursys3.priceAdjustmentApplied)
        Assert.assrt(tursys3.salesPrice == 172.88.toBigDecimal())
        Assert.assrt(tursys3.tax == 20.11.toBigDecimal())
        Assert.assrt(tursys3.totalAmount == 192.99.toBigDecimal())
    }
}