plugins {
    id "java"
    id "application" // Apply the application plugin to add support for building a CLI application.
    id "net.linguica.maven-settings" version "0.5"
    id "com.palantir.git-version" version "0.11.0"
    id "maven-publish"
    id "antlr"
    id "org.jetbrains.kotlin.jvm" version "1.4.31"
}

configurations {
    version versionDetails().lastTag
    group "com.kambr"
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    withSourcesJar()
}




repositories {
    // Use jcenter for resolving dependencies.
    jcenter()
    maven {

    }
}

configurations.all {
    resolutionStrategy.force "org.antlr:antlr4-runtime:4.9.1"
    resolutionStrategy.force "org.antlr:antlr4-tool:4.9.1"
}

dependencies {
    def versionJunit = "5.7.0"
    def versionJunitPlatform = "1.7.0"


    implementation ("org.antlr:antlr4:4.9.1")
    implementation ("org.antlr:antlr4-runtime:4.9-1")
    implementation ("com.google.guava:guava:28.1-jre")
    implementation ("com.kambr:kambr-logger:0.7.3")

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    // Junit
    testImplementation(enforcedPlatform("org.junit:junit-bom:$versionJunit")) // JUnit 5 BOM
    testImplementation("org.junit.platform:junit-platform-engine:$versionJunitPlatform")
    testRuntimeOnly("org.junit.platform:junit-platform-commons:$versionJunitPlatform")
    testImplementation("org.junit.jupiter:junit-jupiter-engine:$versionJunit")
    testImplementation("org.junit.jupiter:junit-jupiter-api:$versionJunit")
}

application {
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}