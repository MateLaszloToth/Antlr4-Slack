
plugins {
    id 'java'
    id 'application' // Apply the application plugin to add support for building a CLI application.
    id 'net.linguica.maven-settings' version '0.5'
    id 'com.palantir.git-version' version '0.11.0'
    id 'maven-publish'
    id 'antlr'
}

configurations {
    version versionDetails().lastTag
    group 'com.kambr'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        myPublication(MavenPublication) {
            artifactId = 'genius-sync-parser'

            from components.java
        }
    }
    // Repositories *to* which Gradle can publish artifacts
    repositories {
        maven {
            url = uri("https://pkgs.dev.azure.com/kambr/_packaging/mvn/maven/v1")
            credentials {
                username "$mavenUser"
                password "$mavenPassword"
            }
        }
    }
}


repositories {
    // Use jcenter for resolving dependencies.
    jcenter()
    maven {
        url "https://pkgs.dev.azure.com/kambr/_packaging/mvn/maven/v1"
        credentials {
            username "$mavenUser"
            password "$mavenPassword"
        }
    }
}

dependencies {

    implementation 'org.antlr:antlr4:4.8-1'
    implementation 'org.antlr:antlr4-runtime:4.8-1'
    implementation 'com.google.guava:guava:28.1-jre'
    implementation 'com.kambr:kambr-logger:0.7.3'

    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.2'


}

application {
    // Define the main class for the application.
    mainClassName = 'com.kambr.sync.GeniusSyncParser'
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
}